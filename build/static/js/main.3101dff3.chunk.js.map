{"version":3,"sources":["components/editor/AceBox.js","components/editor/Test.js","components/editor/Tests.js","components/editor/Result.js","components/editor/Results.js","components/editor/EditorBody.js","components/editor/EditorHeader.js","components/editor/EditorPage.js","components/App.js","serviceWorker.js","index.js"],"names":["AceBox","props","mode","theme","onChange","name","editorProps","$blockScrolling","setOptions","enableBasicAutocompletion","enableLiveAutocompletion","enableSnippets","value","codeValue","height","width","useStyles","makeStyles","createStyles","root","margin","spacing","MultilineTextFields","classes","event","updatedTest","test","target","setTests","prevTests","map","index","className","noValidate","autoComplete","TextField","label","multiline","rows","variant","style","textAlign","input","expectedOutput","flexGrow","backgroundColor","palette","background","paper","ScrollableTabsButtonAuto","useState","setValue","AppBar","position","color","Tabs","newValue","indicatorColor","textColor","scrollButtons","aria-label","Tab","tests","output","borderColor","result","status","description","Typography","disabled","compile_output","includes","stderr","stdout","time","tabs","border","divider","getColor","replace","results","fontWeight","subHeaderText","formControl","minWidth","selectEmpty","marginTop","EditorBody","languages","language","setLanguage","setCodeValue","setResults","loading","setLoading","loaded","setLoaded","onRun","a","filteredTests","filter","bodies","postResponses","i","length","axios","post","postResponse","tokens","responseObject","token","data","submissionObjects","tokenObject","submission","get","submissions","Promise","resolve","all","then","newResults","Container","align","FormControl","Select","id","MenuItem","toLowerCase","newCodeValue","updateValue","Button","size","onClick","CircularProgress","titleText","LoggedInHeader","CssBaseline","Toolbar","EditorPage","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"2RAOe,SAASA,EAAQC,GAQ/B,OACC,kBAAC,IAAD,CACCC,KAAK,OACLC,MAAM,SACNC,SAAUH,EAAMG,SAChBC,KAAK,mBACLC,YAAa,CAAEC,iBAAiB,GAChCC,WAAY,CACXC,2BAA2B,EAC3BC,0BAA0B,EAC1BC,gBAAgB,GAEjBC,MAASX,EAAMY,UACfC,OAAS,QACTC,MAAQ,Q,wECzBLC,EAAYC,aAAW,SAACd,GAAD,OAC3Be,YAAa,CACXC,KAAM,CACJ,uBAAwB,CACtBC,OAAQjB,EAAMkB,QAAQ,GAC5BN,MAAO,aAMM,SAASO,EAAoBrB,GAC1C,IAAMsB,EAAUP,IACXZ,EAAW,SAACoB,GACjB,IAAMC,EAAW,eAAOxB,EAAMyB,MAC9BD,EAAYD,EAAMG,OAAOtB,MAAQmB,EAAMG,OAAOf,MAC9CX,EAAM2B,UAAS,SAAAC,GAAS,OAAIA,EAAUC,KAAI,SAAAJ,GAAI,OAAIA,EAAKK,QAAU9B,EAAMyB,KAAKK,MAAQN,EAAcC,SAElG,OACE,0BAAMM,UAAWT,EAAQJ,KAAMc,YAAU,EAACC,aAAa,OACrD,6BACE,kBAACC,EAAA,EAAD,CAAWC,MAAM,QAAQC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAWC,MAAS,CAACC,UAAW,UAAW7B,MAASX,EAAMyB,KAAKgB,MAAOtC,SAAYA,EAAUC,KAAO,UAC7J,6BACA,6BACM,kBAAC8B,EAAA,EAAD,CAAWC,MAAM,kBAAkBC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAYC,MAAS,CAACC,UAAW,UAAW7B,MAASX,EAAMyB,KAAKiB,eAAgBvC,SAAYA,EAAUC,KAAO,qBCcnL,IAAMW,EAAYC,aAAW,SAAAd,GAAK,MAAK,CACrCgB,KAAM,CACJyB,SAAU,EACV7B,MAAO,MACP8B,gBAAiB1C,EAAM2C,QAAQC,WAAWC,WAI/B,SAASC,EAAyBhD,GAC/C,IAAMsB,EAAUP,IADsC,EAE5BkC,mBAAS,GAFmB,mBAE/CtC,EAF+C,KAExCuC,EAFwC,KAQtD,OACE,yBAAKnB,UAAWT,EAAQJ,MACtB,kBAACiC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAQ,WAChC,kBAACC,EAAA,EAAD,CACE3C,MAAOA,EACPR,SATa,SAACoB,EAAOgC,GAC3BL,EAASK,IASHC,eAAe,UACfC,UAAU,UACVnB,QAAQ,aACRoB,cAAc,OACdC,aAAW,gCAEX,kBAACC,EAAA,EAAD,CAAKzB,MAAM,WACX,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACX,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACX,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACX,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACX,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACX,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACjB,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACL,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,WACX,kBAACyB,EAAA,EAAD,CAAKzB,MAAM,cAGlB,6BACA,6BACc,IAAVxB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACvD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WACpD,IAAVhB,GAAe,kBAAC,EAAD,CAAMc,KAAQzB,EAAM6D,MAAM,GAAIlC,SAAW3B,EAAM2B,WAC/D,6BACA,8BC1FH,IAAMZ,EAAYC,aAAW,SAACd,GAAD,MAC3B,CACAgB,KAAM,CACL,uBAAwB,CACvBC,OAAQjB,EAAMkB,QAAQ,GACtBN,MAAO,QAGTgD,OAAQ,CAEPC,YAAa,UAEbN,UAAW,UACXjB,UAAW,cAKC,SAASnB,EAAoBrB,GAC3C,IAAMsB,EAAUP,IAEhB,OAAKf,EAAMgE,OA4ByC,sBAA3ChE,EAAMgE,OAAOA,OAAOC,OAAOC,YAGlC,0BAAMnC,UAAWT,EAAQJ,KAAMc,YAAU,EAACC,aAAa,OACtD,6BACA,6BACC,kBAACkC,EAAA,EAAD,CAAY7B,QAAU,MAAtB,qBACA,6BACA,kBAACJ,EAAA,EAAD,CAAWE,WAAS,EAACC,KAAM,GAAIC,QAAQ,WAAW8B,UAAQ,EAACrC,UAAaT,EAAQwC,OAAQnD,MAAOX,EAAMgE,OAAOA,OAAOK,iBACnH,6BACA,6BACA,6BACA,+BAKKrE,EAAMgE,OAAOA,OAAOC,OAAOC,YAAYI,SAAS,iBAGvD,0BAAMvC,UAAWT,EAAQJ,KAAMc,YAAU,EAACC,aAAa,OACtD,6BACA,kBAACkC,EAAA,EAAD,CAAY7B,QAAU,MAAtB,kBAEA,6BACC,kBAACJ,EAAA,EAAD,CAAWC,MAAM,eAAeC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAW8B,UAAQ,EAACrC,UAAaT,EAAQwC,OAAQnD,MAAOX,EAAMgE,OAAOA,OAAOO,OAASvE,EAAMgE,OAAOA,OAAOO,OAAS,MAC7K,6BACA,kBAACrC,EAAA,EAAD,CAAWC,MAAM,gBAAgBC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAW8B,UAAQ,EAACrC,UAAaT,EAAQwC,OAAQnD,MAAOX,EAAMgE,OAAOA,OAAOQ,OAASxE,EAAMgE,OAAOA,OAAOQ,OAAS,MAC9K,6BACA,6BACA,kBAACL,EAAA,EAAD,wBAA6BnE,EAAMgE,OAAOA,OAAOS,QAKD,wBAA3CzE,EAAMgE,OAAOA,OAAOC,OAAOC,YAGlC,0BAAMnC,UAAWT,EAAQJ,KAAMc,YAAU,EAACC,aAAa,OACtD,6BACA,kBAACkC,EAAA,EAAD,CAAY7B,QAAU,MAAtB,uBACA,6BACC,kBAACJ,EAAA,EAAD,CAAWC,MAAM,eAAeC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAW8B,UAAQ,EAACrC,UAAaT,EAAQwC,OAAQnD,MAAOX,EAAMgE,OAAOA,OAAOO,OAASvE,EAAMgE,OAAOA,OAAOO,OAAS,MAC7K,6BACA,kBAACrC,EAAA,EAAD,CAAWC,MAAM,gBAAgBC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAW8B,UAAQ,EAACrC,UAAaT,EAAQwC,OAAQnD,MAAOX,EAAMgE,OAAOA,OAAOQ,OAASxE,EAAMgE,OAAOA,OAAOQ,OAAS,MAC9K,6BACA,6BACA,kBAACL,EAAA,EAAD,wBAA6BnE,EAAMgE,OAAOA,OAAOS,QAQnD,0BAAM1C,UAAWT,EAAQJ,KAAMc,YAAU,EAACC,aAAa,OACtD,6BACA,6BACA,6BACC,kBAACC,EAAA,EAAD,CAAWC,MAAM,kBAAkBC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAW8B,UAAQ,EAACrC,UAAaT,EAAQwC,OAAQnD,MAAOX,EAAMgE,OAAOtB,iBACnI,6BACA,6BACA,kBAACR,EAAA,EAAD,CAAWC,MAAM,kBAAkBC,WAAS,EAACC,KAAM,EAAGC,QAAQ,WAAW8B,UAAQ,EAACrC,UAAaT,EAAQwC,OAAQnD,MAAOX,EAAMgE,OAAOA,OAAOQ,SAC1I,6BACA,6BACA,kBAACL,EAAA,EAAD,wBAA6BnE,EAAMgE,OAAOA,OAAOS,KAAjD,cA1FF,0BAAM1C,UAAWT,EAAQJ,KAAMc,YAAU,EAACC,aAAa,OACtD,6BACA,6BACA,6BACC,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,kBAACkC,EAAA,EAAD,CAAY7B,QAAU,MAAtB,uDACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,+BCdL,IAAMvB,EAAYC,aAAW,SAAAd,GAAK,MAAK,CACrCgB,KAAM,CACJyB,SAAU,EACV7B,MAAO,MACP8B,gBAAiB1C,EAAM2C,QAAQC,WAAWC,OAE5C2B,KAAM,CACPC,OAAO,aAAD,OAAezE,EAAM2C,QAAQ+B,cAIrB,SAAS5B,EAAyBhD,GAE/C,IAAMsB,EAAUP,IAFsC,EAG5BkC,mBAAS,GAHmB,mBAG/CtC,EAH+C,KAGxCuC,EAHwC,KAStD,SAAS2B,EAASb,GACjB,OAAe,OAAXA,EAEI,UAEsC,aAArCA,EAAOA,OAAOC,OAAOC,aAA8BF,EAAOA,OAAOQ,OAAOM,QAAQ,aAAc,MAAQd,EAAOtB,eAAeoC,QAAQ,aAAc,IAErJ,UAIE,UAIT,OACE,yBAAK/C,UAAWT,EAAQJ,MACtB,kBAACiC,EAAA,EAAD,CAAQC,SAAS,SAASC,MAAQ,WAChC,kBAACC,EAAA,EAAD,CACE3C,MAAOA,EACPR,SAxBa,SAACoB,EAAOgC,GAC3BL,EAASK,IAwBHC,eAAe,UACflB,QAAQ,aACRoB,cAAc,OACpBC,aAAW,gCAGL,kBAACC,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAC1I,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAC1I,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAC1I,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAC1I,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAC1I,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAC1I,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAChJ,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UACpI,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,WAAWJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,UAC1I,kBAACpB,EAAA,EAAD,CAAKzB,MAAM,YAAYJ,UAAaT,EAAQoD,KAAMnC,MAAS,CAACK,gBAAiBiC,EAAS7E,EAAM+E,QAAQ,IAAKtB,UAAW,UAAWuB,WAAY,YAIpI,IAAVrE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACxC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KACrC,IAAVpE,GAAe,kBAAC,EAAD,CAAQqD,OAAUhE,EAAM+E,QAAQ,KAChD,6BACA,8B,8BCjGGhE,EAAYC,aAAW,SAACd,GAAD,MAAY,CACxCgB,KAAM,CACLyB,SAAU,GAEXsC,cAAe,CACd5B,MAAO,WAER6B,YAAa,CACZC,SAAU,KAEXC,YAAa,CACZC,UAAWnF,EAAMkB,QAAQ,QAIZ,SAASkE,IACvB,IAAMhE,EAAUP,IACVwE,EAAY,CAAC,OAAQ,IAAK,MAAO,SAAU,cAFb,EAGJtC,mBAAS,GAHL,mBAG7BuC,EAH6B,KAGnBC,EAHmB,OAIFxC,mBAAS,IAJP,mBAI7BrC,EAJ6B,KAIlB8E,EAJkB,OAQVzC,mBAAS,CAClC,CAAEnB,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,IACvC,CAAEZ,MAAO,EAAGW,MAAO,GAAIC,eAAgB,MAlBJ,mBAQ7BmB,EAR6B,KAQtBlC,EARsB,OAqBNsB,mBAAS,IArBH,mBAqB7B8B,EArB6B,KAqBpBY,EArBoB,OAkCN1C,oBAAS,GAlCH,mBAkC7B2C,EAlC6B,KAkCpBC,EAlCoB,OAmCR5C,oBAAS,GAnCD,mBAmC7B6C,EAnC6B,KAmCrBC,EAnCqB,KAuCpC,IAQMC,EAAK,uCAAG,8CAAAC,EAAA,sDACbJ,GAAW,GAKLK,EAAgBrC,EAAMsC,QAAO,SAAA1E,GAAI,MAA4B,KAAxBA,EAAKiB,kBAE1C0D,EAASF,EAAcrE,KAAI,SAAAJ,GAAI,MAAK,CACzC,YAAeb,EACf,MAASa,EAAKgB,MACd,SAAY8C,EAAUC,GACtB1D,MAAOL,EAAKK,UAIPuE,EAAgB,GACbC,EAAI,EAjBA,YAiBGA,EAAIF,EAAOG,QAjBd,iCAmBeC,IAAMC,KAAK,oCAAqCL,EAAOE,IAnBtE,OAmBNI,EAnBM,OAoBZL,EAAcC,GAAK,CAACI,eAAc5E,MAAOsE,EAAOE,GAAGxE,OApBvC,QAiBsBwE,IAjBtB,uBAuCb,IAbMK,EAASN,EAAcxE,KAAI,SAAA+E,GAAc,MAAK,CAACC,MAAOD,EAAeF,aAAaI,KAAMhF,MAAO8E,EAAe9E,UAG9GiF,EAAoBJ,EAAO9E,KAAI,SAAAmF,GAGpC,MAAO,CAACC,WADWT,IAAMU,IAAN,oCAAuCF,EAAYH,OAAS,CAACA,MAAOG,EAAYH,QAC/E/E,MAAOkF,EAAYlF,UAMlCqF,EAAc,GACXb,EAAI,EAAGA,EAAI,GAAIA,IAEvBa,EAAYb,GAAKc,QAAQC,QAAQ,MAGlC,IAASf,EAAI,EAAGA,EAAIS,EAAkBR,OAAQD,IAE7Ca,EAAYJ,EAAkBT,GAAGxE,OAASiF,EAAkBT,GAAGW,WAGhEG,QAAQE,IAAIH,GAAaI,MAAK,SAAAxC,GAE7B,IAAMyC,EAAazC,EAAQlD,KAAI,SAACmC,EAAQlC,GAAT,OAAoBkC,EAAS,CAACA,OAAQA,EAAO8C,KAAMpE,eAAgBmB,EAAM/B,GAAOY,gBAAkB,QACjIiD,EAAW6B,GAEX3B,GAAW,GACXE,GAAU,MAvDE,4CAAH,qDAgEX,OACC,6BACC,kBAAC0B,EAAA,EAAD,CAAWC,MAAM,UAGhB,6BAEA,kBAACvD,EAAA,EAAD,CAAY7B,QAAQ,KAAKP,UAAWT,EAAQ2D,eAA5C,qCACA,6BACA,kBAAC0C,EAAA,EAAD,CAAarF,QAAQ,WAAWP,UAAWT,EAAQ4D,aAClD,kBAAC0C,EAAA,EAAD,CACCC,GAAG,uBACHlH,MAAO6E,EACPrF,SArFgB,SAAAoB,GACpBkE,EAAYlE,EAAMG,OAAOf,SAsFrB,kBAACmH,EAAA,EAAD,CAAUnH,MAAO,GAAjB,QACA,kBAACmH,EAAA,EAAD,CAAUnH,MAAO,GAAjB,KACA,kBAACmH,EAAA,EAAD,CAAUnH,MAAO,GAAjB,OACA,kBAACmH,EAAA,EAAD,CAAUnH,MAAO,GAAjB,UACA,kBAACmH,EAAA,EAAD,CAAUnH,MAAO,GAAjB,gBAGF,6BACA,6BACA,kBAACZ,EAAD,CAAQE,KAAMsF,EAAUC,GAAUuC,cAAe5H,SA7FnC,SAAA6H,IANjB,SAAqBA,GACpBtC,EAAasC,GAMbC,CAAYD,IA4F2DpH,UAAWA,IAChF,kBAACuD,EAAA,EAAD,sFACA,6BACA,8BAEEyB,GACD,kBAACsC,EAAA,EAAD,CAAQC,KAAK,QAAQ7F,QAAQ,YAAY8F,QAASpC,EAAOzD,MAA+C,KAAxC3B,EAAUkE,QAAQ,aAAc,IAAa,CAAEzB,MAAO,UAAWT,gBAAiB,WAAa,CAACS,MAAO,UAAWT,gBAAiB,UAAWoC,WAAY,QAAUZ,SAAoD,KAAxCxD,EAAUkE,QAAQ,aAAc,KAAhR,aAGAc,GACA,oCACC,kBAACyC,EAAA,EAAD,CAAkBhF,MAAM,YAAY8E,KAAQ,MAG9C,6BACA,6BACA,6BACA,kBAAC,EAAD,CAAOtE,MAAOA,EAAOlC,SAAUA,IAC/B,6BACA,6BACA,6BACA,6BACCmE,GAAU,kBAAC,EAAD,CAASf,QAAWA,KAEhC,6BACA,6BACA,6BACA,6BACA,6BACA,8B,sBCrLGhE,EAAYC,aAAW,SAACd,GAAD,MAAY,CACxCgB,KAAM,CACLyB,SAAU,GAEX2F,UAAW,CACV3F,SAAU,EACVqC,WAAY,OACZ3B,MAAO,eAIM,SAASkF,EAAevI,GACtC,IAAMsB,EAAUP,IAEhB,OACC,yBAAKgB,UAAWT,EAAQJ,MACvB,kBAACiC,EAAA,EAAD,CAAQC,SAAS,SAASb,MAAO,CAAEO,WAAY,YAC9C,kBAAC0F,EAAA,EAAD,MACA,kBAACC,EAAA,EAAD,KACC,kBAACtE,EAAA,EAAD,CAAY7B,QAAQ,KAAKP,UAAWT,EAAQgH,WAA5C,kBCtBU,SAASI,IAEvB,OACC,yBAAKnG,MAAS,CAACO,WAAY,YAC1B,kBAAC,EAAD,MACA,kBAACwC,EAAD,OCPY,SAASqD,IAEvB,OAAO,kBAACD,EAAD,MCQYE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACR,kBAACP,EAAD,MACAQ,SAASC,eAAe,SD4HnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhC,MAAK,SAAAiC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.3101dff3.chunk.js","sourcesContent":["import React, {useState, useEffect, useRef} from \"react\";\nimport AceEditor from \"react-ace\";\nimport \"ace-builds/src-noconflict/mode-java\";\nimport \"ace-builds/src-noconflict/theme-github\";\nimport \"ace-builds/src-noconflict/ext-language_tools\"\n// Render editor\n\nexport default function AceBox (props)\n{\n\t// const aceEditorRef = useRef(null)\n\t// useEffect(() => {\n\t// \tif (aceEditorRef)\n\t// \t\taceEditorRef.current.editor.value = props.codeValue\n\t// }, [props])\n\n\treturn (\n\t\t<AceEditor\n\t\t\tmode=\"java\"\n\t\t\ttheme=\"github\"\n\t\t\tonChange={props.onChange}\n\t\t\tname=\"UNIQUE_ID_OF_DIV\"\n\t\t\teditorProps={{ $blockScrolling: true }}\n\t\t\tsetOptions={{\n\t\t\t\tenableBasicAutocompletion: true,\n\t\t\t\tenableLiveAutocompletion: true,\n\t\t\t\tenableSnippets: true\n\t\t\t}}\n\t\t\tvalue = {props.codeValue}\n\t\t\theight = \"500px\"\n\t\t\twidth = \"80%\"\n\t\t\t// ref = {aceEditorRef}\n\t\t/>\n\t)\n}","import React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      \"& .MuiTextField-root\": {\n        margin: theme.spacing(1),\n\t\twidth: \"80%\",\n      }\n    }\n  })\n);\n\nexport default function MultilineTextFields(props) {\n  const classes = useStyles();\n\tconst onChange = (event) => {\n\t\tconst updatedTest = {...props.test}\n\t\tupdatedTest[event.target.name] = event.target.value\n\t\tprops.setTests(prevTests => prevTests.map(test => test.index === props.test.index ? updatedTest : test))\n\t}\n  return (\n    <form className={classes.root} noValidate autoComplete=\"off\">\n      <div>\n        <TextField label=\"Input\" multiline rows={5} variant=\"outlined\" style = {{textAlign: \"center\"}} value = {props.test.input} onChange = {onChange} name = \"input\"/>\n\t\t<br></br>\n\t\t<br></br>\n        <TextField label=\"Expected Output\" multiline rows={5} variant=\"outlined\"  style = {{textAlign: \"center\"}} value = {props.test.expectedOutput} onChange = {onChange} name = \"expectedOutput\"/>\n      </div>\n    </form>\n  );\n}\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Test from \"./Test\"\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nfunction a11yProps(index) {\n  return {\n    id: `scrollable-auto-tab-${index}`,\n    \"aria-controls\": `scrollable-auto-tabpanel-${index}`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"80%\",\n    backgroundColor: theme.palette.background.paper\n  }\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color = \"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          textColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n          aria-label=\"scrollable auto tabs example\"\n        >\n          <Tab label=\"Test 1\"/>\n          <Tab label=\"Test 2\" />\n          <Tab label=\"Test 3\" />\n          <Tab label=\"Test 4\" />\n          <Tab label=\"Test 5\"/>\n          <Tab label=\"Test 6\"  />\n          <Tab label=\"Test 7\" />\n\t\t  <Tab label=\"Test 8\"  />\n          <Tab label=\"Test 9\"  />\n          <Tab label=\"Test 10\"  />\n        </Tabs>\n      </AppBar>\n\t  <br></br>\n\t  <br></br>\n      {value === 0 && <Test test = {props.tests[0]} setTests ={props.setTests}></Test>}\n\t  {value === 1 && <Test test = {props.tests[1]} setTests ={props.setTests}></Test>}\n\t  {value === 2 && <Test test = {props.tests[2]} setTests ={props.setTests}></Test>}\n\t  {value === 3 && <Test test = {props.tests[3]} setTests ={props.setTests}></Test>}\n\t  {value === 4 && <Test test = {props.tests[4]} setTests ={props.setTests}></Test>}\n\t  {value === 5 && <Test test = {props.tests[5]} setTests ={props.setTests}></Test>}\n\t  {value === 6 && <Test test = {props.tests[6]} setTests ={props.setTests}></Test>}\n\t  {value === 7 && <Test test = {props.tests[7]} setTests ={props.setTests}></Test>}\n\t  {value === 8 && <Test test = {props.tests[8]} setTests ={props.setTests}></Test>}\n\t  {value === 9 && <Test test = {props.tests[9]} setTests ={props.setTests}></Test>}\n\t  <br></br>\n\t  <br></br>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Typography } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) =>\n\t({\n\t\troot: {\n\t\t\t\"& .MuiTextField-root\": {\n\t\t\t\tmargin: theme.spacing(1),\n\t\t\t\twidth: \"80%\",\n\t\t\t}\n\t\t},\n\t\toutput: {\n\t\t\t// backgroundColor: \"#000000\",\n\t\t\tborderColor: \"#000000\",\n\n\t\t\ttextColor: \"#ffffff\",\n\t\t\ttextAlign: \"center\"\n\t\t}\n\t})\n);\n\nexport default function MultilineTextFields(props) {\n\tconst classes = useStyles();\n\t//console.log(props)\n\tif (!props.result)\n\t{\t\n\t\treturn (\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<div>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Typography variant = \"h6\">You did not enter an expected output for this test.</Typography>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t)\n\t}\n\telse if (props.result.result.status.description === \"Compilation Error\")\n\t{\n\t\treturn (\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<br></br>\n\t\t\t\t<div>\n\t\t\t\t\t<Typography variant = \"h5\">Compilation Error</Typography>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<TextField multiline rows={12} variant=\"outlined\" disabled className = {classes.output} value={props.result.result.compile_output} />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n\telse if (props.result.result.status.description.includes(\"Runtime Error\"))\n\t{\n\t\treturn (\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<br></br>\n\t\t\t\t<Typography variant = \"h5\">Run-Time Error</Typography>\n\t\n\t\t\t\t<div>\n\t\t\t\t\t<TextField label=\"System Error\" multiline rows={5} variant=\"outlined\" disabled className = {classes.output} value={props.result.result.stderr ? props.result.result.stderr : \" \"} />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<TextField label=\"System Output\" multiline rows={5} variant=\"outlined\" disabled className = {classes.output} value={props.result.result.stdout ? props.result.result.stdout : \" \"} />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Typography>Execution Time: {props.result.result.time}</Typography>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n\telse if (props.result.result.status.description === \"Time Limit Exceeded\")\n\t{\n\t\treturn (\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<br></br>\n\t\t\t\t<Typography variant = \"h5\">Time Limit Exceeded</Typography>\n\t\t\t\t<div>\n\t\t\t\t\t<TextField label=\"System Error\" multiline rows={4} variant=\"outlined\" disabled className = {classes.output} value={props.result.result.stderr ? props.result.result.stderr : \" \"} />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<TextField label=\"System Output\" multiline rows={4} variant=\"outlined\" disabled className = {classes.output} value={props.result.result.stdout ? props.result.result.stdout : \" \"} />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Typography>Execution Time: {props.result.result.time}</Typography>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n\telse \n\t{\n\t\treturn (\n\t\t\t<form className={classes.root} noValidate autoComplete=\"off\">\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<div>\n\t\t\t\t\t<TextField label=\"Expected Output\" multiline rows={5} variant=\"outlined\" disabled className = {classes.output} value={props.result.expectedOutput} />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<TextField label=\"Received Output\" multiline rows={5} variant=\"outlined\" disabled className = {classes.output} value={props.result.result.stdout} />\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Typography>Execution Time: {props.result.result.time} seconds</Typography>\n\t\t\t\t</div>\n\t\t\t</form>\n\t\t);\n\t}\n}\n","import React, {useState} from \"react\";\nimport PropTypes from \"prop-types\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Box from \"@material-ui/core/Box\";\nimport Result from \"./Result\"\n\nfunction TabPanel(props) {\n  const { children, value, index, ...other } = props;\n  return (\n    <div\n      role=\"tabpanel\"\n      hidden={value !== index}\n      id={`scrollable-auto-tabpanel-${index}`}\n      aria-labelledby={`scrollable-auto-tab-${index}`}\n      {...other}\n    >\n      {value === index && (\n        <Box p={3}>\n          <Typography>{children}</Typography>\n        </Box>\n      )}\n    </div>\n  );\n}\n\nTabPanel.propTypes = {\n  children: PropTypes.node,\n  index: PropTypes.any.isRequired,\n  value: PropTypes.any.isRequired\n};\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n    width: \"80%\",\n    backgroundColor: theme.palette.background.paper\n  },\n  tabs: {\n\tborder: `1px solid ${theme.palette.divider}`\n  }\n}));\n\nexport default function ScrollableTabsButtonAuto(props) {\n\t//console.log(props)\n  const classes = useStyles();\n  const [value, setValue] = useState(0);\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  function getColor(result) {\n\t  if (result === null)\n\t  {\n\t\t  return \"#adad97\"\n\t  }\n\t  else if (result.result.status.description === \"Accepted\" && result.result.stdout.replace(/^\\s+|\\s+$/g, '') === result.expectedOutput.replace(/^\\s+|\\s+$/g, ''))\n\t  {\n\t\treturn \"#3ce895\"\n\t  }\n\t  else \n\t  {\n\t\t  return \"#e36d6d\"\n\t  }\n  }\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" color = \"default\">\n        <Tabs\n          value={value}\n          onChange={handleChange}\n          indicatorColor=\"primary\"\n          variant=\"scrollable\"\n          scrollButtons=\"auto\"\n\t\t  aria-label=\"scrollable auto tabs example\"\n\t\t  \n        >\n          <Tab label=\"Result 1\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[0]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 2\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[1]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 3\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[2]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 4\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[3]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 5\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[4]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 6\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[5]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 7\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[6]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n\t\t  <Tab label=\"Result 8\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[7]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 9\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[8]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n          <Tab label=\"Result 10\" className = {classes.tabs} style = {{backgroundColor: getColor(props.results[9]), textColor: \"#000000\", fontWeight: \"bold\"}}/>\n        </Tabs>\n      </AppBar>\n\n      {value === 0 && <Result result = {props.results[0]}></Result>}\n\t  {value === 1 && <Result result = {props.results[1]} ></Result>}\n\t  {value === 2 && <Result result = {props.results[2]} ></Result>}\n\t  {value === 3 && <Result result = {props.results[3]} ></Result>}\n\t  {value === 4 && <Result result = {props.results[4]} ></Result>}\n\t  {value === 5 && <Result result = {props.results[5]}></Result>}\n\t  {value === 6 && <Result result = {props.results[6]} ></Result>}\n\t  {value === 7 && <Result result = {props.results[7]} ></Result>}\n\t  {value === 8 && <Result result = {props.results[8]} ></Result>}\n\t  {value === 9 && <Result result = {props.results[9]} ></Result>}\n\t  <br></br>\n\t  <br></br>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Container, Typography, FormControl, MenuItem, Select, Button, InputLabel, Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles';\nimport AceBox from \"./AceBox\";\nimport Tests from \"./Tests\"\nimport Results from \"./Results\"\nimport axios from 'axios'\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\tsubHeaderText: {\n\t\tcolor: \"#690e0e\",\n\t},\n\tformControl: {\n\t\tminWidth: 120,\n\t},\n\tselectEmpty: {\n\t\tmarginTop: theme.spacing(2)\n\t}\n}));\n\nexport default function EditorBody() {\n\tconst classes = useStyles()\n\tconst languages = [\"java\", \"c\", \"c++\", \"python\", \"javascript\"]\n\tconst [language, setLanguage] = useState(0)\n\tconst [codeValue, setCodeValue] = useState(\"\")\n\t// const [codeValue, setCodeValue] = useState(\n\t// \twindow.localStorage.getItem('codeValue') ? JSON.parse(window.localStorage.getItem('codeValue')) : \"\"\n\t// )\n\tconst [tests, setTests] = useState([\n\t\t{ index: 0, input: '', expectedOutput: '' },\n\t\t{ index: 1, input: '', expectedOutput: '' },\n\t\t{ index: 2, input: '', expectedOutput: '' },\n\t\t{ index: 3, input: '', expectedOutput: '' },\n\t\t{ index: 4, input: '', expectedOutput: '' },\n\t\t{ index: 5, input: '', expectedOutput: '' },\n\t\t{ index: 6, input: '', expectedOutput: '' },\n\t\t{ index: 7, input: '', expectedOutput: '' },\n\t\t{ index: 8, input: '', expectedOutput: '' },\n\t\t{ index: 9, input: '', expectedOutput: '' },\n\t])\n\n\tconst [results, setResults] = useState([\n\t\t// { index: 0, expectedOutput: '123', receivedOutput: '113' },\n\t\t// { index: 1, expectedOutput: '234', receivedOutput: '234' },\n\t\t// { index: 2, expectedOutput: '', receivedOutput: '' },\n\t\t// { index: 3, expectedOutput: '4555', receivedOutput: '46' },\n\t\t// { index: 4, expectedOutput: '', receivedOutput: '' },\n\t\t// { index: 5, expectedOutput: '', receivedOutput: '' },\n\t\t// { index: 6, expectedOutput: '', receivedOutput: '' },\n\t\t// { index: 7, expectedOutput: '', receivedOutput: '' },\n\t\t// { index: 8, expectedOutput: '', receivedOutput: '' },\n\t\t// { index: 9, expectedOutput: '', receivedOutput: '' },\n\t])\n\n\tconst [loading, setLoading] = useState(false)\n\tconst [loaded, setLoaded] = useState(false)\n\tfunction updateValue(newCodeValue) {\n\t\tsetCodeValue(newCodeValue)\n\t}\n\tconst handleChange = event => {\n\t\tsetLanguage(event.target.value);\n\t};\n\tconst onChange = newCodeValue => {\n\t\tupdateValue(newCodeValue)\n\t\t// localStorage.setItem('codeValue', JSON.stringify(newCodeValue)); \n\t};\n\n\tconst onRun = async () => {\n\t\tsetLoading(true)\n\t\t//console.log(tests)\n\t\t//console.log({codeValue})\n\n\n\t\tconst filteredTests = tests.filter(test => test.expectedOutput !== '')\n\t\t//console.log(filteredTests)\n\t\tconst bodies = filteredTests.map(test => ({\n\t\t\t\"source_code\": codeValue,\n\t\t\t\"stdin\": test.input,\n\t\t\t\"language\": languages[language],\n\t\t\tindex: test.index\n\t\t}))\n\n\t\t//console.log(bodies)\n\t\tconst postResponses = []\n\t\tfor (let i = 0; i < bodies.length; i++)\n\t\t{\n\t\t\tconst postResponse = await axios.post(\"http://localhost:3001/api/compile\", bodies[i])\n\t\t\tpostResponses[i] = {postResponse, index: bodies[i].index}\n\t\t}\n\n\t\t\n\t\t//console.log(postResponses)\n\n\t\tconst tokens = postResponses.map(responseObject => ({token: responseObject.postResponse.data, index: responseObject.index}))\n\t\t//console.log(tokens)\n\n\t\tconst submissionObjects = tokens.map(tokenObject => {\n\t\t\t//console.log(tokenObject)\n\t\t\tconst submission = axios.get(`http://localhost:3001/api/${tokenObject.token}`, {token: tokenObject.token})\n\t\t\treturn {submission, index: tokenObject.index}\n\t\t})\n\t\t\t\n\t\t\t\n\t\t// const submissions = submissionObjects.map(submissionObject => submissionObject.submission)\n\n\t\tconst submissions = []\n\t\tfor (let i = 0; i < 10; i++)\n\t\t{\n\t\t\tsubmissions[i] = Promise.resolve(null);\n\t\t}\n\t\n\t\tfor (let i = 0; i < submissionObjects.length; i++)\n\t\t{\n\t\t\tsubmissions[submissionObjects[i].index] = submissionObjects[i].submission\n\t\t}\n\t\t//console.log(submissions)\n\t\tPromise.all(submissions).then(results => {\n\t\t\t//console.log(results)\n\t\t\tconst newResults = results.map((result, index) => (result ? {result: result.data, expectedOutput: tests[index].expectedOutput} : null))\n\t\t\tsetResults(newResults)\n\t\t\t//console.log(newResults)\n\t\t\tsetLoading(false)\n\t\t\tsetLoaded(true)\n\t\t})\n\t\t\n\t}\n\n\t// console.log(language)\n\t// console.log(initialCodeValues[language])\n\t// console.log(codeValue)\n\n\treturn (\n\t\t<div>\n\t\t\t<Container align=\"center\">\n\n\n\t\t\t\t<br></br>\n\n\t\t\t\t<Typography variant=\"h4\" className={classes.subHeaderText}>Focused Competetive Coding Editor</Typography>\n\t\t\t\t<br></br>\n\t\t\t\t<FormControl variant=\"outlined\" className={classes.formControl}>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tid=\"language-choice-form\"\n\t\t\t\t\t\tvalue={language}\n\t\t\t\t\t\tonChange={handleChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MenuItem value={0}>Java</MenuItem>\n\t\t\t\t\t\t<MenuItem value={1}>C</MenuItem>\n\t\t\t\t\t\t<MenuItem value={2}>C++</MenuItem>\n\t\t\t\t\t\t<MenuItem value={3}>Python</MenuItem>\n\t\t\t\t\t\t<MenuItem value={4}>Javascript</MenuItem>\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<AceBox mode={languages[language].toLowerCase()} onChange={onChange} codeValue={codeValue} />\n\t\t\t\t<Typography>Note for Java users: Put your main (execution) method in a class named \"Main\"</Typography>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t{\n\t\t\t\t\t!loading && \n\t\t\t\t\t<Button size=\"large\" variant=\"contained\" onClick={onRun} style={codeValue.replace(/^\\s+|\\s+$/g, '') === '' ? { color: \"#000000\", backgroundColor: \"#807373\"} : {color: \"#ffffff\", backgroundColor: \"#9c5a5a\", fontWeight: \"bold\" }} disabled = {codeValue.replace(/^\\s+|\\s+$/g, '') === ''}>Run Tests</Button>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tloading && \n\t\t\t\t\t<>\n\t\t\t\t\t\t<CircularProgress color=\"secondary\" size = {60}/>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<Tests tests={tests} setTests={setTests}></Tests>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t<br></br>\n\t\t\t\t{loaded && <Results results = {results}></Results>}\n\t\t\t</Container>\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t\t<br></br>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nconst useStyles = makeStyles((theme) => ({\n\troot: {\n\t\tflexGrow: 1,\n\t},\n\ttitleText: {\n\t\tflexGrow: 1,\n\t\tfontWeight: \"bold\",\n\t\tcolor: \"#962f2f\"\n\t},\n}));\n\nexport default function LoggedInHeader(props) {\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<div className={classes.root}>\n\t\t\t<AppBar position=\"static\" style={{ background: '#fffbfa' }}>\n\t\t\t\t<CssBaseline />\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography variant=\"h4\" className={classes.titleText}>\n\t\t\t\t\t\t\tCode Sprint\n\t\t\t\t\t</Typography>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t</div>\n\t);\n}\n","import React from 'react';\nimport EditorBody from \"./EditorBody\"\nimport EditorHeader from \"./EditorHeader\"\n\nexport default function EditorPage ()\n{\n\treturn (\n\t\t<div style = {{background: \"#fff5fb\"}}>\n\t\t\t<EditorHeader></EditorHeader>\n\t\t\t<EditorBody></EditorBody>\n\t\t</div>\n\t)\n}","import React from 'react';\nimport EditorPage from \"./editor/EditorPage\"\nexport default function App ()\n{\n\treturn <EditorPage />\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n\t<App />,\n\tdocument.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}